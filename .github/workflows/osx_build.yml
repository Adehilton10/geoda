# This is a basic workflow to help you get started with Actions

name: Mac OSX builds

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  osx_build:
    # The type of runner that the job will run on
    runs-on: macos-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"

    # Steps represent a sequence of tasks that will be executed as part of the job
    
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Prepare
      - name: Prepare
        run: |
          pwd
          mkdir o
          cd BuildTools
          cd macosx
          mkdir temp
          mkdir libraries
          
      # Build wxWidgets 3.1.4
      - name: Build wxWidgets 3.1.4
        run: |
          cd temp
          curl -k -o wxWidgets.tar.gz2 https://github.com/wxWidgets/wxWidgets/releases/download/v3.1.4/wxWidgets-3.1.4.tar.bz2
          tar -xf wxWidgets.tar.bz2
          cd wxWidgets-3.1.4
          ./configure LDFLAGS="-arch x86_64" OBJCFLAGS="-arch x86_64" OBJCXXFLAGS="-arch x86_64" --with-cocoa --disable-shared --disable-monolithic --with-opengl --enable-postscript --enable-textfile --without-liblzma --enable-webview --enable-compat28 --prefix=../../libraries
          make
          make install

      # Install libgdal-dev
      - name: Install libgdal-dev
        run: brew install gdal

      # Install boost 1.75
      - name: Install Boost
        run: brew install boost

      # Build GeoDa
      - name: Build GeoDa
        run: |
          #
          # JSON Spirit v4.08
          #
          #
          # CLAPACK 3.1.1
          #
          #
          # Eigen3
          #
          #
          # Spectra v0.8.0
          #
          #
          #
          # GeoDa
          #
          export GEODA_HOME=$PWD
          make
          make app
      
      # Create Dmg
      - name: Create DMG
        run: |
          cd create-dmg
          ./geoda.sh 1.18

      # Upload artifact
      - uses: actions/upload-artifact@v2
        with:
          name: GeoDa-1.18-MacOS
          path: create-dmg/GeoDa1.18.dmg





