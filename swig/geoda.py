# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.10
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _geoda.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_geoda', [dirname(__file__)])
        except ImportError:
            import _geoda
            return _geoda
        if fp is not None:
            try:
                _mod = imp.load_module('_geoda', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _geoda = swig_import_helper()
    del swig_import_helper
else:
    import _geoda
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _geoda.delete_SwigPyIterator
    def __iter__(self): return self
SwigPyIterator.value = new_instancemethod(_geoda.SwigPyIterator_value,None,SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_geoda.SwigPyIterator_incr,None,SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_geoda.SwigPyIterator_decr,None,SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_geoda.SwigPyIterator_distance,None,SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_geoda.SwigPyIterator_equal,None,SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_geoda.SwigPyIterator_copy,None,SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_geoda.SwigPyIterator_next,None,SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_geoda.SwigPyIterator___next__,None,SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_geoda.SwigPyIterator_previous,None,SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_geoda.SwigPyIterator_advance,None,SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_geoda.SwigPyIterator___eq__,None,SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_geoda.SwigPyIterator___ne__,None,SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_geoda.SwigPyIterator___iadd__,None,SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_geoda.SwigPyIterator___isub__,None,SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_geoda.SwigPyIterator___add__,None,SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_geoda.SwigPyIterator___sub__,None,SwigPyIterator)
SwigPyIterator_swigregister = _geoda.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)

class VecDouble(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self): return self.iterator()
    def __init__(self, *args): 
        _geoda.VecDouble_swiginit(self,_geoda.new_VecDouble(*args))
    __swig_destroy__ = _geoda.delete_VecDouble
VecDouble.iterator = new_instancemethod(_geoda.VecDouble_iterator,None,VecDouble)
VecDouble.__nonzero__ = new_instancemethod(_geoda.VecDouble___nonzero__,None,VecDouble)
VecDouble.__bool__ = new_instancemethod(_geoda.VecDouble___bool__,None,VecDouble)
VecDouble.__len__ = new_instancemethod(_geoda.VecDouble___len__,None,VecDouble)
VecDouble.pop = new_instancemethod(_geoda.VecDouble_pop,None,VecDouble)
VecDouble.__getslice__ = new_instancemethod(_geoda.VecDouble___getslice__,None,VecDouble)
VecDouble.__setslice__ = new_instancemethod(_geoda.VecDouble___setslice__,None,VecDouble)
VecDouble.__delslice__ = new_instancemethod(_geoda.VecDouble___delslice__,None,VecDouble)
VecDouble.__delitem__ = new_instancemethod(_geoda.VecDouble___delitem__,None,VecDouble)
VecDouble.__getitem__ = new_instancemethod(_geoda.VecDouble___getitem__,None,VecDouble)
VecDouble.__setitem__ = new_instancemethod(_geoda.VecDouble___setitem__,None,VecDouble)
VecDouble.append = new_instancemethod(_geoda.VecDouble_append,None,VecDouble)
VecDouble.empty = new_instancemethod(_geoda.VecDouble_empty,None,VecDouble)
VecDouble.size = new_instancemethod(_geoda.VecDouble_size,None,VecDouble)
VecDouble.clear = new_instancemethod(_geoda.VecDouble_clear,None,VecDouble)
VecDouble.swap = new_instancemethod(_geoda.VecDouble_swap,None,VecDouble)
VecDouble.get_allocator = new_instancemethod(_geoda.VecDouble_get_allocator,None,VecDouble)
VecDouble.begin = new_instancemethod(_geoda.VecDouble_begin,None,VecDouble)
VecDouble.end = new_instancemethod(_geoda.VecDouble_end,None,VecDouble)
VecDouble.rbegin = new_instancemethod(_geoda.VecDouble_rbegin,None,VecDouble)
VecDouble.rend = new_instancemethod(_geoda.VecDouble_rend,None,VecDouble)
VecDouble.pop_back = new_instancemethod(_geoda.VecDouble_pop_back,None,VecDouble)
VecDouble.erase = new_instancemethod(_geoda.VecDouble_erase,None,VecDouble)
VecDouble.push_back = new_instancemethod(_geoda.VecDouble_push_back,None,VecDouble)
VecDouble.front = new_instancemethod(_geoda.VecDouble_front,None,VecDouble)
VecDouble.back = new_instancemethod(_geoda.VecDouble_back,None,VecDouble)
VecDouble.assign = new_instancemethod(_geoda.VecDouble_assign,None,VecDouble)
VecDouble.resize = new_instancemethod(_geoda.VecDouble_resize,None,VecDouble)
VecDouble.insert = new_instancemethod(_geoda.VecDouble_insert,None,VecDouble)
VecDouble.reserve = new_instancemethod(_geoda.VecDouble_reserve,None,VecDouble)
VecDouble.capacity = new_instancemethod(_geoda.VecDouble_capacity,None,VecDouble)
VecDouble_swigregister = _geoda.VecDouble_swigregister
VecDouble_swigregister(VecDouble)

class VecVecDouble(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self): return self.iterator()
    def __init__(self, *args): 
        _geoda.VecVecDouble_swiginit(self,_geoda.new_VecVecDouble(*args))
    __swig_destroy__ = _geoda.delete_VecVecDouble
VecVecDouble.iterator = new_instancemethod(_geoda.VecVecDouble_iterator,None,VecVecDouble)
VecVecDouble.__nonzero__ = new_instancemethod(_geoda.VecVecDouble___nonzero__,None,VecVecDouble)
VecVecDouble.__bool__ = new_instancemethod(_geoda.VecVecDouble___bool__,None,VecVecDouble)
VecVecDouble.__len__ = new_instancemethod(_geoda.VecVecDouble___len__,None,VecVecDouble)
VecVecDouble.pop = new_instancemethod(_geoda.VecVecDouble_pop,None,VecVecDouble)
VecVecDouble.__getslice__ = new_instancemethod(_geoda.VecVecDouble___getslice__,None,VecVecDouble)
VecVecDouble.__setslice__ = new_instancemethod(_geoda.VecVecDouble___setslice__,None,VecVecDouble)
VecVecDouble.__delslice__ = new_instancemethod(_geoda.VecVecDouble___delslice__,None,VecVecDouble)
VecVecDouble.__delitem__ = new_instancemethod(_geoda.VecVecDouble___delitem__,None,VecVecDouble)
VecVecDouble.__getitem__ = new_instancemethod(_geoda.VecVecDouble___getitem__,None,VecVecDouble)
VecVecDouble.__setitem__ = new_instancemethod(_geoda.VecVecDouble___setitem__,None,VecVecDouble)
VecVecDouble.append = new_instancemethod(_geoda.VecVecDouble_append,None,VecVecDouble)
VecVecDouble.empty = new_instancemethod(_geoda.VecVecDouble_empty,None,VecVecDouble)
VecVecDouble.size = new_instancemethod(_geoda.VecVecDouble_size,None,VecVecDouble)
VecVecDouble.clear = new_instancemethod(_geoda.VecVecDouble_clear,None,VecVecDouble)
VecVecDouble.swap = new_instancemethod(_geoda.VecVecDouble_swap,None,VecVecDouble)
VecVecDouble.get_allocator = new_instancemethod(_geoda.VecVecDouble_get_allocator,None,VecVecDouble)
VecVecDouble.begin = new_instancemethod(_geoda.VecVecDouble_begin,None,VecVecDouble)
VecVecDouble.end = new_instancemethod(_geoda.VecVecDouble_end,None,VecVecDouble)
VecVecDouble.rbegin = new_instancemethod(_geoda.VecVecDouble_rbegin,None,VecVecDouble)
VecVecDouble.rend = new_instancemethod(_geoda.VecVecDouble_rend,None,VecVecDouble)
VecVecDouble.pop_back = new_instancemethod(_geoda.VecVecDouble_pop_back,None,VecVecDouble)
VecVecDouble.erase = new_instancemethod(_geoda.VecVecDouble_erase,None,VecVecDouble)
VecVecDouble.push_back = new_instancemethod(_geoda.VecVecDouble_push_back,None,VecVecDouble)
VecVecDouble.front = new_instancemethod(_geoda.VecVecDouble_front,None,VecVecDouble)
VecVecDouble.back = new_instancemethod(_geoda.VecVecDouble_back,None,VecVecDouble)
VecVecDouble.assign = new_instancemethod(_geoda.VecVecDouble_assign,None,VecVecDouble)
VecVecDouble.resize = new_instancemethod(_geoda.VecVecDouble_resize,None,VecVecDouble)
VecVecDouble.insert = new_instancemethod(_geoda.VecVecDouble_insert,None,VecVecDouble)
VecVecDouble.reserve = new_instancemethod(_geoda.VecVecDouble_reserve,None,VecVecDouble)
VecVecDouble.capacity = new_instancemethod(_geoda.VecVecDouble_capacity,None,VecVecDouble)
VecVecDouble_swigregister = _geoda.VecVecDouble_swigregister
VecVecDouble_swigregister(VecVecDouble)

class VecInt(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self): return self.iterator()
    def __init__(self, *args): 
        _geoda.VecInt_swiginit(self,_geoda.new_VecInt(*args))
    __swig_destroy__ = _geoda.delete_VecInt
VecInt.iterator = new_instancemethod(_geoda.VecInt_iterator,None,VecInt)
VecInt.__nonzero__ = new_instancemethod(_geoda.VecInt___nonzero__,None,VecInt)
VecInt.__bool__ = new_instancemethod(_geoda.VecInt___bool__,None,VecInt)
VecInt.__len__ = new_instancemethod(_geoda.VecInt___len__,None,VecInt)
VecInt.pop = new_instancemethod(_geoda.VecInt_pop,None,VecInt)
VecInt.__getslice__ = new_instancemethod(_geoda.VecInt___getslice__,None,VecInt)
VecInt.__setslice__ = new_instancemethod(_geoda.VecInt___setslice__,None,VecInt)
VecInt.__delslice__ = new_instancemethod(_geoda.VecInt___delslice__,None,VecInt)
VecInt.__delitem__ = new_instancemethod(_geoda.VecInt___delitem__,None,VecInt)
VecInt.__getitem__ = new_instancemethod(_geoda.VecInt___getitem__,None,VecInt)
VecInt.__setitem__ = new_instancemethod(_geoda.VecInt___setitem__,None,VecInt)
VecInt.append = new_instancemethod(_geoda.VecInt_append,None,VecInt)
VecInt.empty = new_instancemethod(_geoda.VecInt_empty,None,VecInt)
VecInt.size = new_instancemethod(_geoda.VecInt_size,None,VecInt)
VecInt.clear = new_instancemethod(_geoda.VecInt_clear,None,VecInt)
VecInt.swap = new_instancemethod(_geoda.VecInt_swap,None,VecInt)
VecInt.get_allocator = new_instancemethod(_geoda.VecInt_get_allocator,None,VecInt)
VecInt.begin = new_instancemethod(_geoda.VecInt_begin,None,VecInt)
VecInt.end = new_instancemethod(_geoda.VecInt_end,None,VecInt)
VecInt.rbegin = new_instancemethod(_geoda.VecInt_rbegin,None,VecInt)
VecInt.rend = new_instancemethod(_geoda.VecInt_rend,None,VecInt)
VecInt.pop_back = new_instancemethod(_geoda.VecInt_pop_back,None,VecInt)
VecInt.erase = new_instancemethod(_geoda.VecInt_erase,None,VecInt)
VecInt.push_back = new_instancemethod(_geoda.VecInt_push_back,None,VecInt)
VecInt.front = new_instancemethod(_geoda.VecInt_front,None,VecInt)
VecInt.back = new_instancemethod(_geoda.VecInt_back,None,VecInt)
VecInt.assign = new_instancemethod(_geoda.VecInt_assign,None,VecInt)
VecInt.resize = new_instancemethod(_geoda.VecInt_resize,None,VecInt)
VecInt.insert = new_instancemethod(_geoda.VecInt_insert,None,VecInt)
VecInt.reserve = new_instancemethod(_geoda.VecInt_reserve,None,VecInt)
VecInt.capacity = new_instancemethod(_geoda.VecInt_capacity,None,VecInt)
VecInt_swigregister = _geoda.VecInt_swigregister
VecInt_swigregister(VecInt)

class VecVecInt(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self): return self.iterator()
    def __init__(self, *args): 
        _geoda.VecVecInt_swiginit(self,_geoda.new_VecVecInt(*args))
    __swig_destroy__ = _geoda.delete_VecVecInt
VecVecInt.iterator = new_instancemethod(_geoda.VecVecInt_iterator,None,VecVecInt)
VecVecInt.__nonzero__ = new_instancemethod(_geoda.VecVecInt___nonzero__,None,VecVecInt)
VecVecInt.__bool__ = new_instancemethod(_geoda.VecVecInt___bool__,None,VecVecInt)
VecVecInt.__len__ = new_instancemethod(_geoda.VecVecInt___len__,None,VecVecInt)
VecVecInt.pop = new_instancemethod(_geoda.VecVecInt_pop,None,VecVecInt)
VecVecInt.__getslice__ = new_instancemethod(_geoda.VecVecInt___getslice__,None,VecVecInt)
VecVecInt.__setslice__ = new_instancemethod(_geoda.VecVecInt___setslice__,None,VecVecInt)
VecVecInt.__delslice__ = new_instancemethod(_geoda.VecVecInt___delslice__,None,VecVecInt)
VecVecInt.__delitem__ = new_instancemethod(_geoda.VecVecInt___delitem__,None,VecVecInt)
VecVecInt.__getitem__ = new_instancemethod(_geoda.VecVecInt___getitem__,None,VecVecInt)
VecVecInt.__setitem__ = new_instancemethod(_geoda.VecVecInt___setitem__,None,VecVecInt)
VecVecInt.append = new_instancemethod(_geoda.VecVecInt_append,None,VecVecInt)
VecVecInt.empty = new_instancemethod(_geoda.VecVecInt_empty,None,VecVecInt)
VecVecInt.size = new_instancemethod(_geoda.VecVecInt_size,None,VecVecInt)
VecVecInt.clear = new_instancemethod(_geoda.VecVecInt_clear,None,VecVecInt)
VecVecInt.swap = new_instancemethod(_geoda.VecVecInt_swap,None,VecVecInt)
VecVecInt.get_allocator = new_instancemethod(_geoda.VecVecInt_get_allocator,None,VecVecInt)
VecVecInt.begin = new_instancemethod(_geoda.VecVecInt_begin,None,VecVecInt)
VecVecInt.end = new_instancemethod(_geoda.VecVecInt_end,None,VecVecInt)
VecVecInt.rbegin = new_instancemethod(_geoda.VecVecInt_rbegin,None,VecVecInt)
VecVecInt.rend = new_instancemethod(_geoda.VecVecInt_rend,None,VecVecInt)
VecVecInt.pop_back = new_instancemethod(_geoda.VecVecInt_pop_back,None,VecVecInt)
VecVecInt.erase = new_instancemethod(_geoda.VecVecInt_erase,None,VecVecInt)
VecVecInt.push_back = new_instancemethod(_geoda.VecVecInt_push_back,None,VecVecInt)
VecVecInt.front = new_instancemethod(_geoda.VecVecInt_front,None,VecVecInt)
VecVecInt.back = new_instancemethod(_geoda.VecVecInt_back,None,VecVecInt)
VecVecInt.assign = new_instancemethod(_geoda.VecVecInt_assign,None,VecVecInt)
VecVecInt.resize = new_instancemethod(_geoda.VecVecInt_resize,None,VecVecInt)
VecVecInt.insert = new_instancemethod(_geoda.VecVecInt_insert,None,VecVecInt)
VecVecInt.reserve = new_instancemethod(_geoda.VecVecInt_reserve,None,VecVecInt)
VecVecInt.capacity = new_instancemethod(_geoda.VecVecInt_capacity,None,VecVecInt)
VecVecInt_swigregister = _geoda.VecVecInt_swigregister
VecVecInt_swigregister(VecVecInt)

class VecUINT8(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self): return self.iterator()
    def __init__(self, *args): 
        _geoda.VecUINT8_swiginit(self,_geoda.new_VecUINT8(*args))
    __swig_destroy__ = _geoda.delete_VecUINT8
VecUINT8.iterator = new_instancemethod(_geoda.VecUINT8_iterator,None,VecUINT8)
VecUINT8.__nonzero__ = new_instancemethod(_geoda.VecUINT8___nonzero__,None,VecUINT8)
VecUINT8.__bool__ = new_instancemethod(_geoda.VecUINT8___bool__,None,VecUINT8)
VecUINT8.__len__ = new_instancemethod(_geoda.VecUINT8___len__,None,VecUINT8)
VecUINT8.pop = new_instancemethod(_geoda.VecUINT8_pop,None,VecUINT8)
VecUINT8.__getslice__ = new_instancemethod(_geoda.VecUINT8___getslice__,None,VecUINT8)
VecUINT8.__setslice__ = new_instancemethod(_geoda.VecUINT8___setslice__,None,VecUINT8)
VecUINT8.__delslice__ = new_instancemethod(_geoda.VecUINT8___delslice__,None,VecUINT8)
VecUINT8.__delitem__ = new_instancemethod(_geoda.VecUINT8___delitem__,None,VecUINT8)
VecUINT8.__getitem__ = new_instancemethod(_geoda.VecUINT8___getitem__,None,VecUINT8)
VecUINT8.__setitem__ = new_instancemethod(_geoda.VecUINT8___setitem__,None,VecUINT8)
VecUINT8.append = new_instancemethod(_geoda.VecUINT8_append,None,VecUINT8)
VecUINT8.empty = new_instancemethod(_geoda.VecUINT8_empty,None,VecUINT8)
VecUINT8.size = new_instancemethod(_geoda.VecUINT8_size,None,VecUINT8)
VecUINT8.clear = new_instancemethod(_geoda.VecUINT8_clear,None,VecUINT8)
VecUINT8.swap = new_instancemethod(_geoda.VecUINT8_swap,None,VecUINT8)
VecUINT8.get_allocator = new_instancemethod(_geoda.VecUINT8_get_allocator,None,VecUINT8)
VecUINT8.begin = new_instancemethod(_geoda.VecUINT8_begin,None,VecUINT8)
VecUINT8.end = new_instancemethod(_geoda.VecUINT8_end,None,VecUINT8)
VecUINT8.rbegin = new_instancemethod(_geoda.VecUINT8_rbegin,None,VecUINT8)
VecUINT8.rend = new_instancemethod(_geoda.VecUINT8_rend,None,VecUINT8)
VecUINT8.pop_back = new_instancemethod(_geoda.VecUINT8_pop_back,None,VecUINT8)
VecUINT8.erase = new_instancemethod(_geoda.VecUINT8_erase,None,VecUINT8)
VecUINT8.push_back = new_instancemethod(_geoda.VecUINT8_push_back,None,VecUINT8)
VecUINT8.front = new_instancemethod(_geoda.VecUINT8_front,None,VecUINT8)
VecUINT8.back = new_instancemethod(_geoda.VecUINT8_back,None,VecUINT8)
VecUINT8.assign = new_instancemethod(_geoda.VecUINT8_assign,None,VecUINT8)
VecUINT8.resize = new_instancemethod(_geoda.VecUINT8_resize,None,VecUINT8)
VecUINT8.insert = new_instancemethod(_geoda.VecUINT8_insert,None,VecUINT8)
VecUINT8.reserve = new_instancemethod(_geoda.VecUINT8_reserve,None,VecUINT8)
VecUINT8.capacity = new_instancemethod(_geoda.VecUINT8_capacity,None,VecUINT8)
VecUINT8_swigregister = _geoda.VecUINT8_swigregister
VecUINT8_swigregister(VecUINT8)

class VecVecUINT8(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self): return self.iterator()
    def __init__(self, *args): 
        _geoda.VecVecUINT8_swiginit(self,_geoda.new_VecVecUINT8(*args))
    __swig_destroy__ = _geoda.delete_VecVecUINT8
VecVecUINT8.iterator = new_instancemethod(_geoda.VecVecUINT8_iterator,None,VecVecUINT8)
VecVecUINT8.__nonzero__ = new_instancemethod(_geoda.VecVecUINT8___nonzero__,None,VecVecUINT8)
VecVecUINT8.__bool__ = new_instancemethod(_geoda.VecVecUINT8___bool__,None,VecVecUINT8)
VecVecUINT8.__len__ = new_instancemethod(_geoda.VecVecUINT8___len__,None,VecVecUINT8)
VecVecUINT8.pop = new_instancemethod(_geoda.VecVecUINT8_pop,None,VecVecUINT8)
VecVecUINT8.__getslice__ = new_instancemethod(_geoda.VecVecUINT8___getslice__,None,VecVecUINT8)
VecVecUINT8.__setslice__ = new_instancemethod(_geoda.VecVecUINT8___setslice__,None,VecVecUINT8)
VecVecUINT8.__delslice__ = new_instancemethod(_geoda.VecVecUINT8___delslice__,None,VecVecUINT8)
VecVecUINT8.__delitem__ = new_instancemethod(_geoda.VecVecUINT8___delitem__,None,VecVecUINT8)
VecVecUINT8.__getitem__ = new_instancemethod(_geoda.VecVecUINT8___getitem__,None,VecVecUINT8)
VecVecUINT8.__setitem__ = new_instancemethod(_geoda.VecVecUINT8___setitem__,None,VecVecUINT8)
VecVecUINT8.append = new_instancemethod(_geoda.VecVecUINT8_append,None,VecVecUINT8)
VecVecUINT8.empty = new_instancemethod(_geoda.VecVecUINT8_empty,None,VecVecUINT8)
VecVecUINT8.size = new_instancemethod(_geoda.VecVecUINT8_size,None,VecVecUINT8)
VecVecUINT8.clear = new_instancemethod(_geoda.VecVecUINT8_clear,None,VecVecUINT8)
VecVecUINT8.swap = new_instancemethod(_geoda.VecVecUINT8_swap,None,VecVecUINT8)
VecVecUINT8.get_allocator = new_instancemethod(_geoda.VecVecUINT8_get_allocator,None,VecVecUINT8)
VecVecUINT8.begin = new_instancemethod(_geoda.VecVecUINT8_begin,None,VecVecUINT8)
VecVecUINT8.end = new_instancemethod(_geoda.VecVecUINT8_end,None,VecVecUINT8)
VecVecUINT8.rbegin = new_instancemethod(_geoda.VecVecUINT8_rbegin,None,VecVecUINT8)
VecVecUINT8.rend = new_instancemethod(_geoda.VecVecUINT8_rend,None,VecVecUINT8)
VecVecUINT8.pop_back = new_instancemethod(_geoda.VecVecUINT8_pop_back,None,VecVecUINT8)
VecVecUINT8.erase = new_instancemethod(_geoda.VecVecUINT8_erase,None,VecVecUINT8)
VecVecUINT8.push_back = new_instancemethod(_geoda.VecVecUINT8_push_back,None,VecVecUINT8)
VecVecUINT8.front = new_instancemethod(_geoda.VecVecUINT8_front,None,VecVecUINT8)
VecVecUINT8.back = new_instancemethod(_geoda.VecVecUINT8_back,None,VecVecUINT8)
VecVecUINT8.assign = new_instancemethod(_geoda.VecVecUINT8_assign,None,VecVecUINT8)
VecVecUINT8.resize = new_instancemethod(_geoda.VecVecUINT8_resize,None,VecVecUINT8)
VecVecUINT8.insert = new_instancemethod(_geoda.VecVecUINT8_insert,None,VecVecUINT8)
VecVecUINT8.reserve = new_instancemethod(_geoda.VecVecUINT8_reserve,None,VecVecUINT8)
VecVecUINT8.capacity = new_instancemethod(_geoda.VecVecUINT8_capacity,None,VecVecUINT8)
VecVecUINT8_swigregister = _geoda.VecVecUINT8_swigregister
VecVecUINT8_swigregister(VecVecUINT8)


def CreateRookWeights(*args):
  return _geoda.CreateRookWeights(*args)
CreateRookWeights = _geoda.CreateRookWeights

def CreateQueenWeights(*args):
  return _geoda.CreateQueenWeights(*args)
CreateQueenWeights = _geoda.CreateQueenWeights

def CreateKNNWeights(*args):
  return _geoda.CreateKNNWeights(*args)
CreateKNNWeights = _geoda.CreateKNNWeights

def CreateDistanceWeights(*args):
  return _geoda.CreateDistanceWeights(*args)
CreateDistanceWeights = _geoda.CreateDistanceWeights

def LISA(*args):
  return _geoda.LISA(*args)
LISA = _geoda.LISA

def LocalGeary(*args):
  return _geoda.LocalGeary(*args)
LocalGeary = _geoda.LocalGeary


